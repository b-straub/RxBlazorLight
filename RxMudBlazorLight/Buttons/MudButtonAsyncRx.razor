@inherits MudButton
@RenderBase()

@code {
    [Parameter, EditorRequired]
    public required IStateCommandAsync StateCommand { get; init; }

    [Parameter, EditorRequired]
    public required Func<IStateCommandAsync, Task> ExecuteAsyncCallback { get; init; }

    [Parameter]
    public Func<bool>? CanChangeCallback { get; init; }

    [Parameter]
    public Func<Task<bool>>? ConfirmExecutionAsync { get; init; }

    [Parameter]
    public string? CancelText { get; set; }

    [Parameter]
    public Color? CancelColor { get; set; }

    [Parameter]
    public bool HasProgress { get; set; } = true;

    [Parameter]
    public bool DeferredNotification { get; set; }

    private ButtonRx? _buttonRx;
    private RenderFragment RenderBase() => base.BuildRenderTree;

    protected override void OnInitialized()
    {
        _buttonRx = ButtonRx.Create(MBButtonType.DEFAULT, ConfirmExecutionAsync, Color, ChildContent, HasProgress, CancelText, CancelColor);
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        ArgumentNullException.ThrowIfNull(_buttonRx);
        _buttonRx.SetParameter(StateCommand, ExecuteAsyncCallback, CanChangeCallback, DeferredNotification);

        ChildContent = _buttonRx.ChildContent;
        Color = _buttonRx.Color;
        OnClick = (EventCallback<MouseEventArgs>)_buttonRx.OnClick;
        Disabled = _buttonRx.Disabled;

        base.OnParametersSet();
    }
}
