@inherits MudButton
@typeparam T

@RenderBase()

@code {
    [Parameter, EditorRequired]
    public required IStateProvider<T> StateProvider { get; init; }

    [Parameter]
    public Func<Task<bool>>? ConfirmExecutionAsync { get; init; }

    [Parameter]
    public string? CancelText { get; set; }

    [Parameter]
    public Color? CancelColor { get; set; }

    [Parameter]
    public T? Context { get; set; }

    private RenderFragment RenderBase() => builder => base.BuildRenderTree(builder);
    private ButtonRx<T>? _buttonRx;
    private Color _buttonColor;

    protected override void OnInitialized()
    {
        _buttonRx = ButtonRx<T>.Create(MBButtonType.DEFAULT, ConfirmExecutionAsync, Color, ChildContent, CancelText, CancelColor, Context);
        _buttonColor = Color;

        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        ArgumentNullException.ThrowIfNull(_buttonRx);
        _buttonRx.SetParameter(StateProvider);

        ChildContent = _buttonRx.ChildContent;
        Color = _buttonRx.Color;
        OnClick = (EventCallback<MouseEventArgs>)_buttonRx.OnClick;
        Disabled = _buttonRx.Disabled;

        base.OnParametersSet();
    }
}
