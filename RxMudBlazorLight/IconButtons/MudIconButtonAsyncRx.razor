@inherits MudIconButton

@RenderBase()

@code {
    [Parameter]
    public Func<Task<bool>>? ConfirmExecution { get; set; }

    [Parameter]
    public Action? BeforeExecution { get; set; }

    [Parameter]
    public Action? AfterExecution { get; set; }

    [Parameter]
    public ICommandAsync? RxCommand { get; set; }

    [Parameter]
    public MBIconVariant? IconVariant { get; set; }

    private RenderFragment RenderBase() => builder => base.BuildRenderTree(builder);
    private ButtonAsyncRX? _buttonAsyncRX;

    protected override void OnInitialized()
    {
        ArgumentNullException.ThrowIfNull(RxCommand);
        _buttonAsyncRX = ButtonAsyncRX.Create(MBButtonType.ICON, Color, ChildContent, RxCommand, ConfirmExecution, BeforeExecution, AfterExecution, null, null);
        
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        if (ChildContent is not null)
        {
            throw new InvalidOperationException("Async IconButton can not have ChildContent, user normal button with icon instead!");
        }

        ArgumentNullException.ThrowIfNull(_buttonAsyncRX);
        ArgumentNullException.ThrowIfNull(RxCommand);

        _buttonAsyncRX.SetParameters();
        Icon = _buttonAsyncRX.GetIconButtonParamters(Icon, IconVariant);
        Disabled = _buttonAsyncRX.Disabled;
        OnClick = (EventCallback<MouseEventArgs>)_buttonAsyncRX.OnClick;
        Color = _buttonAsyncRX.Color;

        base.OnParametersSet();
    }
}
