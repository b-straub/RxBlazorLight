@inherits MudNumericField<T>
@typeparam T

@RenderBase()

@code {
    [Parameter, EditorRequired]
    public required IState<T> State { get; init; }

    [Parameter]
    public Func<IState<T>, bool>? CanChange { get; init; }

    private RenderFragment RenderBase() => builder => base.BuildRenderTree(builder);

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (State.HasValue())
        {
            Value = State.Value;
            Text = State.Value.ToString();
        }

        ValueChanged = EventCallback.Factory.Create<T>(this, v =>
        {
            if (v is not null && !v.Equals(State.Value))
            {
                State.Change(s => s.Value = v);
            }
        });
    }

    protected override void OnParametersSet()
    {
        if (State.Done() && State.HasValue())
        {
            Value = State.Value;
            Text = State.Value.ToString();
        }

        Disabled = (CanChange is not null && !State.CanChange(CanChange)) || State.Changing();

        base.OnParametersSet();
    }
}
