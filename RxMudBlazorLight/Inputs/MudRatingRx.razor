@inherits MudRating

@RenderBase()

@code {
    [Parameter, EditorRequired]
    public required IState<int> RxState { get; init; }

    private RenderFragment RenderBase() => builder => base.BuildRenderTree(builder);

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (RxState.HasValue())
        {
            SelectedValue = RxState.Value;
        }
        SelectedValueChanged = EventCallback.Factory.Create<int>(this, v =>
        {
            if (!v.Equals(RxState.Value))
            {
                RxState.Transform(v);
            }
        });
    }

    protected override void OnParametersSet()
    {
        if (RxState.Done() && RxState.HasValue())
        {
            SelectedValue = RxState.Value;
        }

        Disabled = !RxState.CanTransform(RxState.Value) || RxState.Phase is StateChangePhase.CHANGING;
        base.OnParametersSet();
    }
}
