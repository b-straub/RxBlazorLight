@inherits MudRadio<T>
@typeparam T

@RenderBase()

@code {
    [Parameter]
    public int Index { get; set; } = -1;

    [Parameter]
    public T[]? Values { get; set; }

    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public T? InitialSelection { get; set; }

    private RenderFragment RenderBase() => builder => base.BuildRenderTree(builder);

    protected override async Task OnParametersSetAsync()
    {
        ArgumentNullException.ThrowIfNull(Values);

        if (Index < 0)
        {
            throw new InvalidOperationException("MudRadioRX Index must be >= 0!");
        }

        Value = Values[Index];
        ArgumentNullException.ThrowIfNull(Value);

        if (ChildContent is null)
        {
            ChildContent = builder =>
            {
                builder.AddContent(0, Label is null ? Value.ToString() : Label);
            };

            if (Value.Equals(InitialSelection))
            {
                await SelectAsync();
            }
        }

        await base.OnParametersSetAsync();
    }
}
