@inherits MudMenuItem
@typeparam T

@RenderBase()

@code {
    [Parameter, EditorRequired]
    public required Func<ICommand<T>> RxCommandFactory { get; init; }

    [Parameter]
    public T? Parameter { get; set; }

    [Parameter]
    public Func<ICommand<T>, bool>? PrepareExecution { get; set; }

    [Parameter]
    public Func<T?, Task<bool>>? ConfirmExecution { get; set; }

    [Parameter]
    public Action? BeforeExecution { get; set; }

    [Parameter]
    public Action? AfterExecution { get; set; }

    private RenderFragment RenderBase() => builder => base.BuildRenderTree(builder);
    private ButtonPRX<T>? _buttonPRX;
    private ICommand<T>? _rxCommand;

    protected override void OnInitialized()
    {
        ArgumentNullException.ThrowIfNull(RxCommandFactory);
        _rxCommand = RxCommandFactory();

        _buttonPRX = ButtonPRX<T>.Create(MBButtonType.DEFAULT, _rxCommand, ConfirmExecution, BeforeExecution, AfterExecution);

        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        ArgumentNullException.ThrowIfNull(_buttonPRX);
        ArgumentNullException.ThrowIfNull(_rxCommand);

        _rxCommand.PrepareExecution = PrepareExecution;
        _buttonPRX.SetParameters(Parameter);

        Disabled = !_rxCommand.CanExecute(Parameter);
        OnClick = _buttonPRX.OnClick;
        OnTouch = _buttonPRX.OnTouch;
        base.OnParametersSet();
    }
}
