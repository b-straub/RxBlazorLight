@inherits MudMenuItem
@typeparam T

@RenderBase()

@code {
    [Parameter, EditorRequired]
    public required IStateTransformer<T> StateTransformer { get; init; }

    [Parameter, EditorRequired]
    public required Func<IStateTransformer<T>, Task> ValueFactoryAsync { get; init; }

    [Parameter]
    public Func<bool>? DisabledFactory { get; set; }

    private RenderFragment RenderBase() => builder => base.BuildRenderTree(builder);
    private ButtonPRx<T>? _buttonPRx;

    protected override void OnInitialized()
    {
        _buttonPRx = ButtonPRx<T>.Create(MBButtonType.DEFAULT, ValueFactoryAsync, Color.Default, null, null, null, DisabledFactory);

        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        ArgumentNullException.ThrowIfNull(_buttonPRx);
        _buttonPRx.SetParameter(StateTransformer);

        OnClick = (EventCallback<MouseEventArgs>)_buttonPRx.OnClick;
        OnTouch = (EventCallback<TouchEventArgs>)_buttonPRx.OnTouch;
        Disabled = _buttonPRx.Disabled;

        base.OnParametersSet();
    }
}
