@inherits RxBLLayoutSubscriber<TestService>
@using RxMudBlazorLight.ToggleIconButtons

<MudThemeProvider @bind-IsDarkMode=@(Service.DarkMode.Value) Theme="_theme" />
<MudDialogProvider />
<MudPopoverProvider />
<MudSnackbarProvider />

<MudLayout>
    <RxBLStateScope TScope=@TimerService.TimerStateScope TService=@TimerService ScopeFactory=@TimerService.CreateScope>
        <MudAppBar Elevation="0">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(_ => DrawerToggle())" />
            <MudSpacer />
            <MudToggleIconButtonRx State=@Service.DarkMode Icon="@Icons.Material.Filled.LightMode" Color="@Color.Warning"
              ToggledIcon="@Icons.Material.Filled.DarkMode" title=@(Service.DarkMode.Value ? "Dark Mode" : "Light Mode") />
            <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/b-straub/RxMudBlazorLight/" Target="_blank" />
        </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
            <MudDrawerHeader>
                <MudText Typo="Typo.h6">RxBlazorLightSample</MudText>
            </MudDrawerHeader>
            <NavMenu />
        </MudDrawer>
        <MudMainContent>
            <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
                @Body
            </MudContainer>
        </MudMainContent>
    </RxBLStateScope>
</MudLayout>

@code {
    [Inject]
    public required TimerService TimerService { get; init; }

    private bool _drawerOpen = true;
    private MudTheme _theme = new();

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}