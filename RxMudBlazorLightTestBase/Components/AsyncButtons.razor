@inherits RxBLServiceSubscriber<TestService>

<PageTitle>AsyncButtons</PageTitle>

<MudStack>
    <MudText Class="mb-4">Current count Async: @Service.CountStateAsync.Value</MudText>

        <MudStack Row=@true AlignItems=@AlignItems.Center>
            <MudButtonAsyncRx Color="Color.Secondary" Variant="Variant.Filled"
                              State=@Service.CountStateAsync ChangeStateAsync=@TestService.IncrementCounterAsync>
                Increment
            </MudButtonAsyncRx>
            <MudButtonAsyncRx Color="Color.Secondary" Variant="Variant.Filled"
                              State=@Service.CountStateAsync ChangeStateAsync=@TestService.IncrementCounterAsync HasProgress=@true>
                Increment+Progress
            </MudButtonAsyncRx>
        </MudStack>

        <MudStack Row=@true AlignItems=@AlignItems.Center>
            <MudButtonAsyncCancelRx Color="Color.Secondary" Variant="Variant.Filled"
                                    State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                    CancelText="Cancel Add" CancelColor=Color.Error>
                Text+Color+Progress
            </MudButtonAsyncCancelRx>
            <MudButtonAsyncCancelRx Color="Color.Secondary" Variant="Variant.Filled"
                                    State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                    CancelText="Cancel Add" CancelColor=Color.Error HasProgress=@false>
                Text+Color
            </MudButtonAsyncCancelRx>

            <MudButtonAsyncCancelRx Color="Color.Secondary" Variant="Variant.Filled"
                                    State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                    CancelText="Cancel Add">
                Text+Progress
            </MudButtonAsyncCancelRx>
        </MudStack>

        <MudStack Row=@true AlignItems=@AlignItems.Center>
            <MudFabAsyncRx Color="Color.Secondary" EndIcon="@Icons.Material.Filled.PlusOne"
                           State=@Service.CountStateAsync ChangeStateAsync=@TestService.IncrementCounterAsync />
            <MudFabAsyncRx Color="Color.Secondary" EndIcon="@Icons.Material.Filled.PlusOne"
                           State=@Service.CountStateAsync ChangeStateAsync=@TestService.IncrementCounterAsync HasProgress=@true />
        </MudStack>

        <MudStack Row=@true AlignItems=@AlignItems.Center>
            <MudFabAsyncCancelRx Color="Color.Secondary" EndIcon="@Icons.Material.Filled.Add"
                                 State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                 CancelText="Cancel Add 10" CancelColor=Color.Error Label="Text+Color+Progress" />
            <MudFabAsyncCancelRx Color="Color.Secondary" EndIcon="@Icons.Material.Filled.Add"
                                 State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                 CancelText="Cancel Add 10" CancelColor=Color.Error HasProgress=@false Label="Text+Color" />

            <MudFabAsyncCancelRx Color="Color.Secondary" EndIcon="@Icons.Material.Filled.Add"
                                 State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                 CancelText="Cancel Add 10" Label="Text+Progress" />

            <MudFabAsyncCancelRx Color="Color.Secondary" EndIcon="@Icons.Material.Filled.Add"
                                 State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                 Label="Progress" />
            <MudFabAsyncCancelRx Color="Color.Secondary" EndIcon="@Icons.Material.Filled.Add"
                                 State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                 HasProgress=@false Label="N/A" />
        </MudStack>

        <MudStack Row=@true AlignItems=@AlignItems.Center>
            <MudFabAsyncCancelRx Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Add"
                                 State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                 CancelText="Cancel Add 10" CancelColor=Color.Error Label="Text+Color+Progress" />
            <MudFabAsyncCancelRx Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Add"
                                 State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                 CancelText="Cancel Add 10" CancelColor=Color.Error HasProgress=@false Label="Text+Color" />

            <MudFabAsyncCancelRx Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Add"
                                 State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                 CancelText="Cancel Add 10" Label="Text+Progress" />

            <MudFabAsyncCancelRx Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Add"
                                 State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                 Label="Progress" />
            <MudFabAsyncCancelRx Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Add"
                                 State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                 HasProgress=@false Label="N/A" />
        </MudStack>

        <MudStack Row=@true AlignItems=@AlignItems.Center>
            <MudFabAsyncCancelRx Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Add" EndIcon="@Icons.Material.Filled.PlusOne"
                                 State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                 CancelText="Cancel Add 10" CancelColor=Color.Error Label="SI+EI+Text+Color+Progress" />
            <MudFabAsyncCancelRx Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Add" EndIcon="@Icons.Material.Filled.PlusOne"
                                 State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                 CancelText="Cancel Add 10" CancelColor=Color.Error HasProgress=@false Label="SI+EI+Text+Color" />
        </MudStack>

        <MudStack Row=@true AlignItems=@AlignItems.Center>
            <MudIconButtonAsyncRx Color="Color.Secondary" Icon="@Icons.Material.Filled.PlusOne"
                                  State=@Service.CountStateAsync ChangeStateAsync=@TestService.IncrementCounterAsync />
            <MudIconButtonAsyncRx Color="Color.Secondary" Icon="@Icons.Material.Filled.PlusOne"
                                  State=@Service.CountStateAsync ChangeStateAsync=@TestService.IncrementCounterAsync HasProgress=@true />
        </MudStack>

        <MudStack Row=@true AlignItems=@AlignItems.Center>
            <MudIconButtonAsyncCancelRx Color="Color.Secondary" Icon="@Icons.Material.Filled.Add"
                                        State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10)
                                        CancelColor=Color.Error HasProgress=@false />
            <MudIconButtonAsyncCancelRx Color="Color.Secondary" Icon="@Icons.Material.Filled.Add"
                                        State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10) CancelColor=Color.Error />
            <MudIconButtonAsyncCancelRx Color="Color.Secondary" Icon="@Icons.Material.Filled.Add"
                                        State=@Service.CountStateAsync ChangeStateAsync=@TestService.AddToCounterAsync(10) />
        </MudStack>
</MudStack>

@code {
    [Inject]
    public required IDialogService DialogService { get; init; }

    private async Task DoPrepareAddAsync(IStateAsync<int> st, CancellationToken ct)
    {
        ArgumentNullException.ThrowIfNull(DialogService);
        var value = 10;

        var parameters = new DialogParameters
            {
                ["Message"] = $"Add {value} to counter?",
                ["ConfirmButton"] = "Add"
            };

        var dialog = DialogService.Show<ConfirmDialog>("Counter", parameters);

        var res = await dialog.Result;

        if (res.Canceled)
        {
            return;
        }

        st.NotifyChanging();
        await Task.Delay(4000, ct);
        st.Value += value;
    }
}
