@inherits RxBLServiceSubscriber<TestService>

<MudStack Row=@true AlignItems=@AlignItems.Center>
    <MudIconButtonRx Color="Color.Primary" Icon="@Icons.Material.Filled.PlusOne" StateCommand=@Service.CounterCMD ExecuteCommand=@Service.IncrementCounter />
    <MudIconButtonRx Color="Color.Primary" Icon="@Icons.Material.Filled.Add" StateCommand=@Service.CounterCMD ExecuteCommand=@(Service.AddToCounter(5)) />
    <MudIconButtonAsyncRx Color="Color.Secondary" Icon="@Icons.Material.Filled.PlusOne" StateCommand=@Service.CounterCMDAsync ExecuteCommandAsync=@Service.IncrementCounterAsync CanChange=@(Service.CounterCanChangeLowerBound(4)) />
</MudStack>

<MudStack>
    <MudStack>
        <MudText Class="mb-4">Current count: @Scope.Counter</MudText>
    </MudStack>

    <MudStack Row=@true AlignItems=@AlignItems.Center>
        <MudIconButtonRx Color="Color.Secondary" Variant=@Variant.Filled Icon="@Icons.Material.Filled.Add" StateCommand=@Scope.CounterCMD ExecuteCommand=@(TestService.IncrementCounterIndirect(Scope.Counter, v => Scope.Counter = v)) />
        <MudIconButtonAsyncRx Color="Color.Secondary" Variant=@Variant.Filled Icon="@Icons.Material.Filled.Add" StateCommand=@Scope.CounterCMDAsync ExecuteCommandAsync=@Scope.IncrementCounterAsync />
        <MudIconButtonAsyncRx Color="Color.Secondary" Variant=@Variant.Filled Icon="@Icons.Material.Filled.Add" StateCommand=@Scope.CounterCMDAsyncCancel ExecuteCommandAsync=@(Scope.AddToCounterAsync(5)) />
    </MudStack>
</MudStack>

@code {
    [CascadingParameter]
    public required TestService.Scope Scope { get; init; }
}
